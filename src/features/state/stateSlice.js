import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  address: "Not Connected",
  usdcbalance: 0.0,
  cusdbalance: 0.0,
  wcrobalance: 0.0,
  crobalance: 0.0,
  wethbalance: 0.0,
  wbtcbalance: 0.0,
  bocbalance: 0.0,
  sbocbalance: 0.0,
  treasurybalance: 0,
  lpbalance: 0.0,
  cropricefeed: 0.0,
  ethpricefeed: 0.0,
  btcpricefeed: 0.0,
  trovecrocol: 0.0,
  troveethcol: 0.0,
  trovebtccol: 0.0,
  trovedebt: 0.0,
  newtrovecrocol: 0.0,
  newtroveethcol: 0.0,
  newtrovebtccol: 0.0,
  newtrovedebt: 0.0,
  istroveactive: 0,
  protocolborrowfee: 0.0,
  protocoltvl: 0.0,
  protocoltrovecount: 0.0,
  protocolcusdsupply: 0.0,
  protocoltcr: 0.0,
  protocolisrecovery: false,
  protocolrecoverythreshold: 0.0,
  protocolSystemVC: 0.0,
  protocolCROVC: 0.0,
  protocolBTCVC: 0.0,
  protocolETHVC: 0.0,
  spdeposits: 0.0,
  newspdeposits: 0.0,
  trovecrocolapproved: 0.0,
  troveethcolapproved: 0.0,
  trovebtccolapproved: 0.0,

  connecterror: "",
  connectstep: 0,
  status: "",
  mintsuccess: "",
  optionsState: 1,
  connection: 0,

  stakeamount: 0.0,
  unstakeamount: 0.0,
  index: 0.0,
  reward: 0.0,
  circsupply: 0.0,
  rebasetime: 0,
  bondamount: 0.0,

  bocprice: 0.0,
  cusdprice: 0.0,
  bocbondprice: 0.0,
  bocmaxbond: 0.0,
  bondtime: 0,
  bondpurchased: 0.0,
  bondvested: 0.0,
  bondstatus: "",

  totalsupply: 0.0,

  lptreasurybalance: 0,
  lpbondamount: 0.0,
  lpbocprice: 0.0,
  lpbocbondprice: 0.0,
  lpbocmaxbond: 0.0,
  lpbondtime: 0,
  lpbondpurchased: 0.0,

  lpbondvested: 0.0,
  lpbondstatus: "",

  openSideBar: false,
  showBond: true,
  bondModal: false,
  bondModal2: false,
  modalShow: false,
  windowWidth: 400,
  open: false,
  isStake: false,
  loader: false,
  toggle: false,
  showTotal: false,
  modalShowBond: false,
  isConnected: false,
  openLoanCard: false,
  openPoll: false,
  openStaking: false,
  showStatboard: false,
  isConnecting: false,
  currentPath: window.location.pathname,
  isScrolling: false,
  showAgreementModal: true,
  isAgreeToTermsPolicy: false,
};

export const stateSlice = createSlice({
  name: "allStates",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setState: (state, action) => {
      state[action.payload.name] = action.payload.value;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

export const { setState } = stateSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectState = (state) => state.allState;

export default stateSlice.reducer;
